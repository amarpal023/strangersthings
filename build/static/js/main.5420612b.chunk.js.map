{"version":3,"sources":["util/index.js","components/AccountForm.js","components/AddPost.js","components/App.js","components/MessageForm.js","components/Home.js","components/Posts.js","components/PostSingle.js","components/PostView.js","components/Search.js","components/EditPost.js","components/Profile.js","index.js"],"names":["callApi","a","url","method","token","body","options","toUpperCase","headers","JSON","stringify","console","log","fetch","response","json","data","error","AccountForm","setToken","setUser","setMessages","setUserId","useState","username","setUsername","password","setPassword","passwordMatch","setPasswordMatch","params","useParams","history","useHistory","onSubmit","event","preventDefault","fetchUrl","process","user","loginResp","userResp","messages","_id","push","alert","className","type","placeholder","value","onChange","target","disabled","to","AddPost","setPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","handleAdd","ev","post","postResp","postsResp","posts","App","userId","fetchPosts","respObj","useEffect","onClick","exact","path","MessageForm","content","setContent","handleSubmit","message","isAuthor","Home","Posts","handleDelete","postId","map","PostSingle","children","style","margin","author","PostView","find","fromUser","Search","searchTerm","setSearchTerm","allPosts","filteredPosts","filter","text","includes","postMatches","toLowerCase","length","EditPost","Profile","index","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5420612b.chunk.js","sourcesContent":["const { REACT_APP_BASE_URL = 'https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT' } = process.env;\n\nexport const callApi = async ({url, method, token, body}) => {\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    };\n    if(token) options.headers['Authorization'] = `Bearer ${token}`;\n\n    console.log('options: ', options);\n    \n\n    const response = await fetch(`${REACT_APP_BASE_URL}${url}`, options);\n    const data = await response.json();\n    if(data.error) {\n      throw (data.error)\n    }\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// example of calling it\n// callApi({url: '/posts', method: 'POST', token})","import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { callApi } from '../util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst AccountForm = ({setToken, setUser, setMessages, setUserId}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordMatch, setPasswordMatch] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  \n  return <>\n    <form onSubmit={async (event) => {\n      event.preventDefault();\n      try {\n      // we need to send a fetch request, so we can get the token\n      // in order to get a token, the server wants... username and password\n      const fetchUrl = `${REACT_APP_BASE_URL}/users/${params.method}`\n      console.log('fetchUrl: ', fetchUrl);\n\n      const loginResp = await callApi({\n        url: `/users/${params.method}`,\n        method: 'POST',\n        body: {\n          user: {\n            username,\n            password\n          }\n        }\n      });\n      console.log('loginResp: ', loginResp);\n      \n      \n      \n\n      if(loginResp.data) {\n        // if we got back a token, get the user data\n        const userResp = await callApi({url: '/users/me', token: loginResp.data.token});\n        setToken(loginResp.data.token);\n        setUser(userResp.data.username);\n        setMessages(userResp.data.messages);\n        setUserId(userResp.data._id);\n        console.log('userResp.data: ', userResp.data);\n        if (loginResp.data.token) {\n          history.push('/');\n        }}\n      } catch (error){\n        console.error(error)\n        alert(\"Invalid Username or Password. The information you've entered doesn't match any account. Please use the link below to register for an account.\")\n        setUsername('')\n        setPassword('')\n      }\n    }}>\n     <div className = \"container\"> \n      <h1 className= 'loginheader'><div>{params.method}</div></h1>\n      <br/>\n      <input type=\"text\" placeholder=\" username\" value={username} onChange={(event) => setUsername(event.target.value)}></input>\n      <br/>\n        \n      <input type=\"password\" placeholder=\" password\" value={password} onChange={(event) => setPassword(event.target.value)}></input>\n      <br/>\n        \n        \n        {\n            params.method === 'register' ?  <input type=\"password\" placeholder=\"retype your password\" value={passwordMatch} onChange={(event) => setPasswordMatch(event.target.value)}></input>\n            : ''\n        }\n        \n        { \n        \n            params.method === 'register' ? <button type=\"submit\" disabled={!password || !username || password !== passwordMatch } >Submit</button> : <button type=\"submit\" disabled={!password || !username }>Submit</button>\n        \n        }\n        \n        {\n            params.method === 'login' ? <Link to = '/account/register' className=\"registerhere\" >Click here to register</Link> : <Link to = '/account/login'>Click here to login</Link>\n        }   \n     </div>\n    </form>\n</>\n}\n\n\nexport default AccountForm;","import React, { useState } from 'react';\nimport { callApi } from '../util';\n\nconst AddPost = ({token, setPosts}) => {\n  const [title, setTitle] = useState ('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState ('');\n  const [location, setLocation] = useState('');\n  const [willDeliver, setWillDeliver] = useState (false)\n  \n\n  const handleAdd = async (ev) => {\n    ev.preventDefault();\n    console.log({location, description});\n    const postResp = await callApi({\n      url: '/posts',\n      method: 'POST',\n      token,\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          location,\n          willDeliver\n        }\n      }\n    });\n    console.log('postResp: ', postResp);\n    // fetch the posts again, adding our token\n    const postsResp = await callApi({url: '/posts', token});\n    console.log('postsResp: ', postsResp);\n    // set the posts on state\n    setPosts(postsResp.data.posts);\n  }\n  \n  return <>\n  <div className = \"addform\">\n    <h1>Add post</h1>\n    <form onSubmit={handleAdd}>\n\n    <fieldset>\n        <label className=\"addformlabel\">Title: </label>\n        <input type=\"text\" placeholder=\" title\" value={title} onChange={(event) => setTitle(event.target.value)}></input>    \n    </fieldset>\n\n    <fieldset>\n        <label className=\"addformlabel\">Description: </label>\n        <input type=\"text\" placeholder=\" description\" value={description} onChange={(event) => setDescription(event.target.value)}></input>    \n    </fieldset>\n\n    <fieldset>\n        <label className=\"addformlabel\">Price: </label>\n        <input type=\"text\" placeholder=\" price\" value={price} onChange={(event) => setPrice(event.target.value)}></input>    \n    </fieldset>\n\n    <fieldset>\n        <label className=\"addformlabel\">Location: </label>\n        <input type=\"text\" placeholder=\" location\" value={location} onChange={(event) => setLocation(event.target.value)}></input>    \n    </fieldset>\n\n    <fieldset>\n    <label className=\"addformlabel\">Will Deliver: </label>\n      <select type=\"text\" value={willDeliver} onChange={(event) => setWillDeliver(event.target.value)}>\n        <option value=\"false\">No</option>\n        <option value=\"true\">Yes</option>\n      </select>    \n    </fieldset>\n      <button type=\"submit\">Add post</button>\n    </form>\n  </div>\n  </>\n}\n\n\nexport default AddPost;","import React, { useState, useEffect } from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nimport {\n  AccountForm,\n  AddPost,\n  Home,\n  Posts,\n  PostView,\n  Search, \n  EditPost,\n  Profile\n} from './index';\n\nimport { callApi } from '../util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n// const APIURL = REACT_APP_BASE_URL;\n// console.log('APIURL: ', APIURL)\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [userId, setUserId] = useState('');\n  console.log('user: ', user);\n  console.log('posts: ', posts);\n  console.log('messages: ', messages);\n  console.log('userId: ', userId);\n\n  \n\n  const fetchPosts = async () => {\n    const respObj = await callApi({\n      url: `/posts`,\n      token\n    });\n    const postResp = respObj.data.posts;\n    if(postResp) setPosts(postResp);\n  }\n\n  useEffect(() => {\n    try {\n      fetchPosts();  \n    } catch (error) {\n      console.error(error);\n    }\n  }, [token]);\n\n  return <>\n    <header className=\"site-banner\">\n      <Link to ='/' className='emblem'><h1>Stranger's Things</h1></Link>\n      <div className='nav-bar'>\n      <Link to=\"/\" className=\"nav-link\">Home</Link> \n      <Link to=\"/posts\" className=\"nav-link\">Posts</Link> \n      {\n        token ? <Link to ='/profile' className=\"nav-link\">Profile</Link>:''\n      }\n      {\n        token ? <Link to ='/account/login'className ='nav-link' onClick = {() => setToken('')}>Log Out</Link> : <Link to ='/account/login' className='nav-link'>Login</Link> \n      } \n      </div>\n    </header>\n    <main>\n      <Route exact path=\"/\">\n        <Home user={user} token={token} messages={messages} userId={userId}/>\n      </Route>\n      \n      <Route exact path=\"/profile\">\n        <Profile posts={posts} token={token} setPosts={setPosts} setMessages={setMessages} messages={messages} user={user} userId={userId}/>\n      </Route>\n\n      <Route exact path=\"/posts\">\n        {token ? <AddPost token={token} setPosts={setPosts}/> : null}\n        <Search posts={posts} setPosts={setPosts}/>\n        <div className=\"postdisplay\">\n        <Posts posts={posts} token={token} fetchPosts={fetchPosts} setPosts={setPosts}/>\n        </div>\n      </Route>\n      \n      <Route exact path=\"/posts/:postId\">\n        <div className = \"postdisplay\">\n        <PostView posts={posts} token={token}/>\n        </div>\n      </Route>\n      \n      <Route exact path=\"/posts/edit/:postId\">\n        <div className = \"postdisplay\">\n        <EditPost posts={posts} token={token} setPosts={setPosts}/>\n        </div>\n      </Route>\n\n      <Route exact path=\"/account/:method\">\n        <AccountForm setToken={setToken} setUser={setUser} \n        setMessages={setMessages} setUserId={setUserId}/>\n      </Route>\n    </main>\n    <footer />\n  </>\n}\n\nexport default App;","import React, { useState } from 'react';\nimport { callApi } from '../util';\nimport { useHistory } from 'react-router';\n\nconst MessageForm = ({post, token}) => {\n    const [content, setContent] = useState('');\n    const history = useHistory()\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        const url =`/posts/${post._id}/messages`;\n        const data = await callApi({\n            method: 'POST',\n            url,\n            token,\n            body: {\n                message: {\n                    content\n                }\n            }\n        });\n        history.push('./')\n    }\n    return <>\n    {\n        token && !post.isAuthor ? \n        <form className=\"addmessage\"onSubmit={handleSubmit}>\n        <label>Compose Message:</label>\n        <input className=\"addmessagelabel\" value={content} placeholder=\"content\" onChange={(ev) => setContent(ev.target.value)}></input>\n        <button type=\"submit\">Send Message</button>\n        </form> : ''\n\n    }\n       \n    </>\n}\n\nexport default MessageForm;\n\n","import React from 'react';\n\nconst Home = ({user, token, messages, userId}) => {\n  console.log('messages: ', messages);\n  return <>\n    <h1 className=\"welcome\">Welcome to Stranger's Things</h1>\n        {token ? <div className=\"welcomeuser\">\n          You are logged in as {user}\n        </div> : ''}\n  </>\n}\n\n\nexport default Home;","import React from 'react';\nimport { callApi } from '../util';\nimport { Link } from 'react-router-dom';\n\nimport {\n  PostSingle,\n} from '.';\n\nconst Posts = ({posts, token, fetchPosts}) => {\n\n  const handleDelete = async (postId) => {\n    const respObj = await callApi({\n      method: 'DELETE',\n      url: `/posts/${postId}`,\n      token\n    });\n    console.log('respObj: ', respObj);\n    await fetchPosts();\n  }\n  // if... isAuthor is true... then show delete\n  \n  return <>\n    {\n      posts.map(post => <PostSingle key={post._id} post={post} token={token}>\n        {/* props.children */}\n        \n        {\n          post && <Link to={`/posts/${post._id}`} className=\"view-link\">View Post</Link>\n        }\n\n        {\n          post.isAuthor && <Link to={`/posts/edit/${post._id}`} className=\"edit-link\">Edit</Link>\n        }\n\n        {\n          post.isAuthor && <Link to={`/posts/delete/${post._id}`} onClick={() => handleDelete(post._id)} className=\"delete-link\">Delete</Link>\n        }\n      </PostSingle>)\n    }\n  </>\n}\n\n\nexport default Posts;","import React from 'react';\n\nconst PostSingle = ({post, children}) => {\n  return post \n    ? <div \n    style={{margin: '1.2rem'}}\n    >\n      <h5>\n        {post.title}\n      </h5>\n      <div>Description: {post.description}</div>\n      <div>Price: {post.price}</div>\n      <div>Seller: {post.author.username}</div>\n      <div>Location: {post.location}</div>\n      <div>Will Deliver: {post.willDeliver ? 'yes' : 'no'}</div>\n      {\n        children\n      }\n    </div>\n    : 'Loading...'\n}\n\nexport default PostSingle;","import React from 'react';\nimport { useParams } from 'react-router';\n\nimport PostSingle from './PostSingle';\nimport MessageForm from './MessageForm'\n\nconst PostView = ({posts, token}) => {\n  const {postId} = useParams();\n  console.log('postId: ', postId);\n  const post = posts.find(post => post._id === postId);\n  console.log('post: ', post);\n  return <>\n    <PostSingle post={post}>\n      {post && post.messages && post.messages.map(message => <div key={message._id}>{message.fromUser.username}: {message.content} </div>)}\n      <MessageForm token={token} post={post}/>\n    </PostSingle>\n  </>\n}\n\nexport default PostView;","import React, { useState, useEffect} from 'react';\nimport PostSingle from './PostSingle';\n// import { callApi } from '../util';\n\nfunction Search({posts, setPosts}) {\n    // const [posts, setPosts] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const postMatches = (post, text) => {\n        let check = post.includes(text);\n        return check;\n    }\n    const handleSubmit = () => {\n        const filteredPosts = posts.filter(post => postMatches(post.title.toLowerCase(), searchTerm));\n        // const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n        setPosts(filteredPosts);\n        if (!searchTerm.length) {\n            fetchPosts();\n        }\n    }\n    const fetchPosts = async () => {\n        const response = await callApi({\n            url: '/posts',\n});\nconst allPosts = response.data.posts;\n        if(allPosts) setPosts(allPosts);\n    }\n\nreturn <>\n<form className=\"searchbar\" onSubmit={(ev) => {\n    ev.preventDefault()\n    handleSubmit()\n}}>\n    <input type=\"text\" placeholder=\"search...\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n    <button type=\"submit\">Search</button>\n</form>\n\n</>\n}\nexport default Search;\n","import React, { useState } from 'react';\nimport { callApi } from '../util';\nimport { useParams, useHistory } from 'react-router';\n\nimport PostSingle from './PostSingle';\n\nconst EditPost = ({token, setPosts, posts}) => {\n  const [title, setTitle] = useState ('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState ('');\n  const [location, setLocation] = useState('');\n  const [willDeliver, setWillDeliver] = useState (false)\n  \n  const { postId } = useParams();\n  const history = useHistory();\n\n  const post = posts.find(post => post._id === postId);\n\n  const handleAdd = async (ev) => {\n    ev.preventDefault();\n    console.log({location, description});\n    const postResp = await callApi({\n      url: `/posts/${postId}`,\n      method: 'PATCH',\n      token,\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          location,\n          willDeliver\n        }\n      }\n    });\n    console.log('postResp: ', postResp);\n    // fetch the posts again, adding our token\n    const postsResp = await callApi({url: '/posts', token});\n    console.log('postsResp: ', postsResp);\n    // set the posts on state\n    setPosts(postsResp.data.posts);\n    history.push('/posts')\n  }\n  \n  return <>\n    <PostSingle post={post} />\n      <div className = \"editform\">\n        <h1>Edit Post</h1>\n\n\n          <form onSubmit={handleAdd}>\n      \n            <fieldset>\n              <label className=\"editformlabel\">Title: </label>\n              <input type=\"text\" placeholder={`${post && post.title}`} value={title} onChange={(event) => setTitle(event.target.value)}></input>    \n            </fieldset>\n\n            <fieldset>\n              <label className=\"editformlabel\">Description: </label>\n              <input type=\"text\" placeholder={`${post && post.description}`} value={description} onChange={(event) => setDescription(event.target.value)}></input>    \n            </fieldset>\n\n            <fieldset>\n              <label className=\"editformlabel\">Price: </label>\n              <input type=\"text\" placeholder={`${post && post.price}`} value={price} onChange={(event) => setPrice(event.target.value)}></input>    \n            </fieldset>\n\n            <fieldset>\n              <label className=\"editformlabel\">Location: </label>\n              <input type=\"text\" placeholder={`${post && post.location}`} value={location} onChange={(event) => setLocation(event.target.value)}></input>    \n            </fieldset>\n\n            <fieldset>\n              <label className=\"editformlabel\">Will Deliver: </label>\n              <select type=\"text\" placeholder={`${post && post.willDeliver}`} value={willDeliver} onChange={(event) => setWillDeliver(event.target.value)}>\n                <option value=\"false\">No</option>\n                <option value=\"true\">Yes</option>\n              </select>    \n            </fieldset>\n            <button type=\"submit\">Add post</button>\n          </form>\n    </div>\n  </>\n}\n\n\nexport default EditPost;","import React from \"react\";\n\nconst Profile = ({token, messages, user, userId}) => {\n    return <div>\n        <h1 className = \"messageview\">My Profile</h1>\n        {\n            token ? <> \n      \n        <div>\n          <h3 className = \"messagereceived\">Messages Received</h3>\n          {\n            messages.map((message,index) => {\n              console.log('message: ', message);\n              return <div key= {index}>\n              {userId !== message.fromUser._id ? \n               <div className =\"messagereceivedsent\">{message.post.title}: {message.fromUser.username} replied: {message.content}</div>\n              : ''}\n              </div>\n            })\n          }\n          <h3 className = \"messagesent\">Messages Sent</h3>\n          {\n            messages.map((message, index) => {\n              console.log('message: ', message);\n              return <div key= {index}>\n              {userId === message.fromUser._id ? \n               <div className =\"messagereceivedsent\">{message.post.title}: {message.fromUser.username} said: {message.content}</div>\n              : ''}\n              </div>\n            })\n          }\n        </div>\n      </>\n    : ''\n    }\n    </div>\n}\n\nexport default Profile;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// import './bootstrap.min.css';\nimport { App } from './components';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.querySelector('#app')\n);\n"],"sourceRoot":""}